import { Telegram } from "telegraf";
import { CommandData } from "../../types/commands";
import { UserId } from "../../types/telegram";
import { authManager } from "../../auth/auth-manager";

export class StartCommand {
  private methods: Telegram;

  constructor(methods: Telegram) {
    this.methods = methods;
  }

  public async execute(commandData: CommandData): Promise<void> {
    const userId = commandData.from.id;
    if (authManager.isUserAuthorized(userId)) await this.sendAuthorizedMessageToUser(userId) 
    else await this.sendUnauthorizedMessageToUser(userId);
  }

  private async sendAuthorizedMessageToUser(userId: UserId): Promise<void> {
    await this.methods.sendMessage(userId,
      "–ü—Ä–∏–≤–µ—Ç! üëã\n" +
      "–Ø –ø–æ—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –º–æ–¥–µ–ª–∏ ChatGPT 3.5-Turbo!\n" +
      "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏ —è –æ—Ç–≤–µ—á—É –Ω–∞ –Ω–µ–≥–æ!"
      );
  }

  private async sendUnauthorizedMessageToUser(userId: UserId): Promise<void> {
    await this.methods.sendMessage(userId, "–ü—Ä–∏–≤–µ—Ç! üëã\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–æ–∫–µ–Ω, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.");
  }
}